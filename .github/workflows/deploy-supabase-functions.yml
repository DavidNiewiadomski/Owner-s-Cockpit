
name: Deploy Supabase Functions

on:
  push:
    branches:
      - main # Or your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Or your preferred Node.js version

      - name: Install Supabase CLI
        run: |
          # Remove any existing supabase binary and extracted files
          sudo rm -f /usr/local/bin/supabase
          rm -rf supabase
          # Download and extract
          curl -fsSL https://github.com/supabase/cli/releases/download/v1.200.3/supabase_linux_amd64.tar.gz | tar -xz
          # Move to bin directory
          sudo mv supabase /usr/local/bin/
          # Verify installation
          echo "Supabase CLI version:"
          supabase --version

      - name: Verify environment variables
        run: |
          echo "Project ID length: ${#SUPABASE_PROJECT_ID}"
          echo "Access token length: ${#SUPABASE_ACCESS_TOKEN}"
          if [ -z "$SUPABASE_PROJECT_ID" ]; then
            echo "ERROR: SUPABASE_PROJECT_ID is not set"
            exit 1
          fi
          if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then
            echo "ERROR: SUPABASE_ACCESS_TOKEN is not set"
            exit 1
          fi
        env:
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Check if functions exist
        id: check-functions
        run: |
          echo "Checking for functions directory..."
          if [ -d "supabase/functions" ]; then
            echo "Functions directory exists"
            echo "Contents of supabase/functions:"
            ls -la supabase/functions/
            if [ "$(ls -A supabase/functions 2>/dev/null)" ]; then
              echo "functions_exist=true" >> $GITHUB_OUTPUT
              echo "Functions found to deploy"
            else
              echo "functions_exist=false" >> $GITHUB_OUTPUT
              echo "Functions directory is empty"
            fi
          else
            echo "functions_exist=false" >> $GITHUB_OUTPUT
            echo "No functions directory found"
          fi

      - name: Test Supabase CLI authentication
        if: steps.check-functions.outputs.functions_exist == 'true'
        run: |
          echo "Testing Supabase CLI authentication..."
          supabase projects list --debug
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Link Supabase project
        if: steps.check-functions.outputs.functions_exist == 'true'
        run: |
          echo "Linking to project: ${{ secrets.SUPABASE_PROJECT_ID }}"
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} --debug
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Deploy Supabase Edge Functions
        if: steps.check-functions.outputs.functions_exist == 'true'
        run: |
          echo "Deploying functions..."
          echo "Available functions:"
          ls -la supabase/functions/
          supabase functions deploy --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} --debug
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Skip deployment
        if: steps.check-functions.outputs.functions_exist == 'false'
        run: echo "No Supabase functions found to deploy. Skipping deployment."
