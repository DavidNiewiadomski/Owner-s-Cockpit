
name: Deploy Supabase Functions

on:
  push:
    branches:
      - main # Or your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Or your preferred Node.js version

      - name: Install Supabase CLI
        run: |
          curl -fsSL https://github.com/supabase/cli/releases/download/v1.200.3/supabase_linux_amd64.tar.gz | tar -xz
          sudo mv supabase /usr/local/bin/
          supabase --version

      - name: Check if functions exist
        id: check-functions
        run: |
          if [ -d "supabase/functions" ] && [ "$(ls -A supabase/functions)" ]; then
            echo "functions_exist=true" >> $GITHUB_OUTPUT
            echo "Functions found:"
            ls -la supabase/functions/
          else
            echo "functions_exist=false" >> $GITHUB_OUTPUT
            echo "No functions directory found or it's empty"
          fi

      - name: Link Supabase project
        if: steps.check-functions.outputs.functions_exist == 'true'
        run: |
          echo "Linking to project: ${{ secrets.SUPABASE_PROJECT_ID }}"
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} --non-interactive
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Deploy Supabase Edge Functions
        if: steps.check-functions.outputs.functions_exist == 'true'
        run: |
          echo "Deploying functions..."
          supabase functions deploy --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} --debug
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Skip deployment
        if: steps.check-functions.outputs.functions_exist == 'false'
        run: echo "No Supabase functions found to deploy. Skipping deployment."
